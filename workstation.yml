- name: "Configure Fedora Workstation"
  hosts: "localhost"
  connection: "local"

  handlers:

    - name: "Restart cockpit socket"
      ansible.builtin.service:
        name: "cockpit.socket"
        state: "restarted"
      become: true
      tags:
        - "cockpit"
        - "podman"
        - "kvm"
 
  tasks:

    - name: "Install/remove general software"
      tags: "software"
      block:

      - name: "Remove preinstalled packages"
        ansible.builtin.package:
          name:
            - "gnome-tour"
            - "rhythmbox"
          state: "absent"
        become: true

      - name: "Install new packages"
        ansible.builtin.package:
          name:
            - "avr-binutils"
            - "avr-gcc"
            - "avr-libc"
            - "avrdude"
            - "evolution"
            - "fritzing"
            - "geary"
            - "gh"
            - "gnome-extensions-app"
            - "gnome-music"
            - "htop"
            - "mu"
            - "neofetch"
            - "nextcloud-client-nautilus"
            - "openhantek"
            - "powerline-go"
            - "pulseview"
            - "seahorse"
            - "sigrok-firmware-fx2lafw"
            - "thonny"
            - "transmission"
            - "vim"
          state: "present"
        become: true

      - name: "Import RPM Fusion key"
        ansible.builtin.rpm_key:
          state: present
          key: "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020"
        when: ansible_distribution == 'Fedora'
        become: true

      - name: "Enable RPM Fusion repository"
        ansible.builtin.dnf:
          name: "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
          state: present
        when: ansible_distribution == 'Fedora'
        become: true

      - name: "Install GStreamer libav"
        ansible.builtin.package:
          name:
            - "gstreamer1-libav"
          state: "present"
        become: true

      - name: "Enable Visual Studio Code repository"
        ansible.builtin.yum_repository:
          name: "vscode"
          description: "Visual Studio Code"
          baseurl: "https://packages.microsoft.com/yumrepos/vscode" 
          gpgkey: "https://packages.microsoft.com/keys/microsoft.asc"
          gpgcheck: yes
          state: present
        become: true

      - name: "Install Visual Studio Code"
        ansible.builtin.package:
          name: "code"
          state: "present"
        become: true


    - name: "Settings"
      tags: "settings"
      block:

      - name: "Enable Tap to Click"
        community.general.dconf:
          key: "/org/gnome/desktop/peripherals/touchpad/tap-to-click"
          value: "true"

      - name: "Show Calendar week number"
        community.general.dconf:
          key: "/org/gnome/desktop/calendar/show-weekdate"
          value: "true"

      - name: "Show Clock date"
        community.general.dconf:
          key: "/org/gnome/desktop/interface/clock-show-date"
          value: "false"

      - name: "Show Clock weekday"
        community.general.dconf:
          key: "/org/gnome/desktop/interface/clock-show-weekday"
          value: "true"

      - name: "Nautilus zoom level"
        community.general.dconf:
          key: "/org/gnome/nautilus/icon-view/default-zoom-level"
          value: "'standard'"

      - name: "Terminal custom font"
        community.general.dconf:
          key: "/org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/use-system-font"
          value: "false"

      - name: "TextEditor custom font"
        community.general.dconf:
          key: "/org/gnome/TextEditor/custom-font"
          value: "'Monospace 12'"

      - name: "TextEditor highlight current line"
        community.general.dconf:
          key: "/org/gnome/TextEditor/highlight-current-line"
          value: "true"


    - name: "Dot files"
      tags: "dotfiles"
      block:

      - name: "Create .bashrc.d, if not found"
        ansible.builtin.file:
          path: ~/.bashrc.d
          state: directory
          mode: '0755'

      - name: "Check for bashrc.local"
        ansible.builtin.stat:
          path: ~/.bashrc.d/bashrc.local
        register: stat_bashrc

      - name: "Copy bashrc.local in, if not found"
        ansible.builtin.copy:
          src: files/bashrc.local
          dest: ~/.bashrc.d/bashrc.local
        when: stat_bashrc.stat.exists == False

      - name: "Check for .vimrc"
        ansible.builtin.stat:
          path: ~/.vimrc
        register: stat_vimrc

      - name: "Copy .vimrc in, if not found"
        ansible.builtin.copy:
          src: files/vimrc
          dest: ~/.vimrc
        when: stat_vimrc.stat.exists == False

      - name: "Check for .gitconfig"
        ansible.builtin.stat:
          path: ~/.gitconfig
        register: stat_gitconfig

      - name: "Copy .gitconfig in, if not found"
        ansible.builtin.copy:
          src: files/linux-gitconfig
          dest: ~/.gitconfig
        when: stat_gitconfig.stat.exists == False


    - name: "Cockpit"
      tags: "cockpit"
      block:
      - name: "Install cockpit packages"
        ansible.builtin.package:
          name:
            - "cockpit"
            - "cockpit-selinux"
            - "pcp"
            - "cockpit-pcp"
          state: "present"
        become: true

      - name: "Manage cockpit related services"
        ansible.builtin.service:
          name: "{{ item }}"
          state: "started"
        become: true
        loop:
          - "cockpit.socket"
          - "pmcd.service"
          - "pmlogger.service"

      - name: "Manage cockpit firewall policy"
        ansible.posix.firewalld:
          service: "cockpit"
          state: "enabled"
          immediate: true
          permanent: true
        become: true


    - name: "Containers"
      tags: "podman"
      block:
      
      - name: "Install podman package"
        ansible.builtin.package:
          name:
            - "podman"
          state: "present"
        become: true

      - name: "Manage podman service"
        ansible.builtin.service:
          name: "podman.socket"
          state: "started"
          enabled: true
        become: true

      - name: "Install cockpit Podman package"
        ansible.builtin.package:
          name: "cockpit-podman"
          state: "present"
        become: true
        notify:
          - "Restart cockpit socket"


    - name: "Virtual machines"
      tags: "kvm"
      block:

      - name: "Install virtualization packages"
        ansible.builtin.package:
          name:
            - "qemu-kvm-core"
            - "libvirt"
            - "virt-install"
            - "guestfs-tools"
          state: "present"
        become: true

      - name: "Install cockpit Machines package"
        ansible.builtin.package:
          name: "cockpit-machines"
          state: "present"
        become: true
        notify:
          - "Restart cockpit socket"

